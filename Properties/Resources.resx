<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logo" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>